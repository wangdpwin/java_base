Shenandoah 垃圾收集器
Java 12 增加了 Shenandoah 一个低停顿的垃圾收集器，它可以和 Java 应用程序中的执行线程同时进行，用来收集垃圾进行内容回收，这样就可以让停顿时间更少。
更多关于 Shenandoah 垃圾收集器的介绍可以查看文档：Shenandoah GC 介绍 (opens new window)。

ZGC 并发类卸载
Z垃圾收集器现在支持类卸载，通过卸载不使用的类来释放这些类相关的数据结构，从而减少应用程序的总体占用空间。因为是并发执行，所以不会停止 Java 应用程序线程的执行，也因此对 GC 的暂停时间影响微乎其微。默认情况下启用此功能，但可以使用命令行选项禁用-XX:-ClassUnloading。

JVM 常量 API
在包 java.lang.invoke.constant 中定义了一系列的基于值的符号引用，可以用来描述各种可加载常量。可以更容易的对关键类文件和运行时构建的名义描述进行建模，特别是对那些从常量池中加载的常量，也让开发者可以更简单标准的处理可加载常量。

默认使用类数据共享（CDS）
这已经不是 JDK 第一次改进 CDS（Class Data Sharing） 功能了，CDS 可以让 JVM 在同一台机器或虚拟机上启动多个应用的速度速度大大增加。原理是在启动应用时共享一些类加载信息，这样启动新进程时就可以使用共享的数据。在 Java 12 之前此功能需要手动开启，Java 12 调整为默认开启。

微基准套件
Java 12 中添加一套新的基于 JMH 的基本的微基准测试套件。之前也介绍过 JMH 的使用，可以参考之前文章 JMH - Java 代码性能测试的终极利器 (opens new window)。

支持 Unicode 11
在 Java 11 支持了 Unicode 10 之后， Java 12 支持了 Unicode 11，支持操作更多的表情、符号。